*NOTE: this approach is optional and only recommended if you're not declaring your services as singletons - in other words, not using providedIn: root in your service's @Injectable decorator - if you need to declare a service in a way that we want to be able to instantiate multiple instances of the same service (perhaps for some data consistency issue), then this would be the way to architect it*

A way to make app.module leaner.

It's used to register the core services of your app, the ones that wouldn't be suitable for a shared or child module.

Once created, you just add it to your app module's imports array.

The Core module itself follows a similar format to other modules.

Your Core module is likely to only has services, so you don't need to specify an exports property in the Core module.
You just speicfy the services as 'providers', then the exported class makes them available once the Core module is imported into the app.module

