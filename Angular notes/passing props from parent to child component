by default, angular components don't allow props to be passe dinto them by a parent
for this reason, calling a component and passing an element like so:
<child-comp [name]="user.name">
will return an error "can't bind to name since it isn't a known property of child-comp"
this may seem confusing if you have a property in your child-comp.component.ts named "name"

to make the child prop accessible to the parent component, and hence allow the parent to pass-in or "bind" a value to the child component's name prop, we must use a decorator in the child comp
like so:

// child comp class
@Input() name: string;
@Input() someOtherObjectProp: { type: string, name: string, content: string };

you can provide an alias to your prop, which parent comps will refer to when trying to pass in
props
e.g. - @Input('theName') name: string;
and in parent comp 
<child-comp ['theName']="person.name"

if you choose to implement an alias in the child comp definition, then you must ALWAYS use it when passing props from a parent. 
