If your resolver returned some data like so:

// userService.getUser returns observable containing the data
resolve(route: ActivatedRouteSnapshot): Observable<User> {
    return this.userService.getUser(route.params.id)
      .pipe(
        catchError(error => {
          this.alertify.error('Problem retrieving data');
          this.router.navigate(['/members']);
          return of(null);
        })
      );
  }

then in your component, access it like so:

constructor(private route: ActivatedRoute) {}
ngOnInit() {
    this.route.data.subscribe((data) => {
      this.user = data.user;
    });
  }

the data.user prop is available based on the alias you give to your resolved data when declaring it in your routing module, like so:

export const appRoutes: Routes = [
....  
      { path: 'members/:id', component: MemberDetailComponent,
          resolve: { user: MemberDetailResolver }
	// *** note 'user' here ***
      },
....
];
