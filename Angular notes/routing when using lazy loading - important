If you're using modules, and you had a child module named RecipeModule, then you would likely have the root path in your RecipeModule as '/recipe'.
You would have no references to any Recipe routes in your app-routing.module file, so '/recipe' is essentially the root of all RecipeModule navigation


If you're using lazy loading though, you need to have the root path in your RecipeModule (or any lazy loaded module) set to '/', and then have a reference to that child module's root specified in your app-routing.module file, like so:

const appRoutes: Routes = [
  { path: '', redirectTo: '/recipes', pathMatch: 'full' },
  { path: 'recipes', loadChildren: './recipes/recipes.module#RecipesModule' }
];

// loadChildren: './recipes/recipes.module#RecipesModule' 
is in format, name of file then use the class name as the accessor

When you add lazy loading, rememeber to remove the reference to the lazy loaded from your app.module file's imports array - otherwise you'll get an error because you're trying to eager load and lazy load simultaneously
